version: '3.8'


networks:
 observability-net:
   driver: bridge


services:
 app:
   build:
     context: .
     dockerfile: Dockerfile.app
   ports:
     - "5001:5001"
   environment:
     - GEMINI_API_KEY=${GEMINI_API_KEY}
     - PROMETHEUS_URL=http://prometheus:9090
     - LOKI_URL=http://loki:3100
   networks:
     - observability-net
   depends_on:
     prometheus:
       condition: service_started
     loki:
       condition: service_started


 prometheus:
   image: prom/prometheus:v2.47.0
   container_name: prometheus
   command:
     - '--config.file=/etc/prometheus/prometheus.yml'
   ports:
     - "9090:9090"
   volumes:
     - ./prometheus.yml:/etc/prometheus/prometheus.yml
   networks:
     - observability-net


 loki:
   build:
     context: ./loki-build
     dockerfile: Dockerfile
   container_name: loki
   working_dir: /loki
   command: -config.file=/etc/loki/config.yaml
   ports:
     - "3100:3100"
   networks:
     - observability-net


 grafana:
   image: grafana/grafana:10.2.2
   container_name: grafana
   ports:
     - "3000:3000"
   volumes:
     - ./grafana-provisioning/:/etc/grafana/provisioning/
   networks:
     - observability-net
   depends_on:
     - loki
     - prometheus


 promtail:
   image: grafana/promtail:2.9.0
   container_name: promtail
   volumes:
     - /var/run/docker.sock:/var/run/docker.sock
     - ./promtail-config.yml:/etc/promtail/config.yml
   command: -config.file=/etc/promtail/config.yml
   networks:
     - observability-net
   depends_on:
     - loki


 demo-app:
   build:
     context: .
     dockerfile: Dockerfile.demo
   container_name: demo-app
   environment:
     - PYTHONUNBUFFERED=1
   networks:
     - observability-net

